# main.py
from core.utils.common import select_project, select_repositories
from core.analyze.repository_analysis import analyze_repository
from core.analyze.batch_analysis import analyze_all_repositories
from core.logging.logger import log
from core.utils.cache import clear_project_summary_cache, clear_cache_for_repo
from dotenv import load_dotenv
load_dotenv()

# –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ os.getenv()

def choose_analysis_mode() -> str:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∞–Ω–∞–ª–∏–∑–∞:
      1. –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑
      2. –ì–ª—É–±–æ–∫–∏–π –ò–ò –∞–Ω–∞–ª–∏–∑ (–±—ã—Å—Ç—Ä—ã–π + –≤—ã–∑–æ–≤ –ò–ò)
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç "fast" –∏–ª–∏ "deep".
    """
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞:")
        print("1. –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑")
        print("2. –ì–ª—É–±–æ–∫–∏–π –ò–ò –∞–Ω–∞–ª–∏–∑")
        choice = input("–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2: ").strip()
        if choice == "1":
            return "fast"
        elif choice == "2":
            return "deep"
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

def main():
    log("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...", flush=True)

    # 1. –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞
    project_name = select_project()
    if not project_name:
        log("‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.", level="ERROR")
        print("‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.", flush=True)
        return

    # 2. –í—ã–±–æ—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ (–≤—Å–µ –∏–ª–∏ –æ–¥–∏–Ω)
    repositories, single_repository = select_repositories(project_name)

    if not repositories and not single_repository:
        log("‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.", level="ERROR")
        print("‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.", flush=True)
        return

    # 3. –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∞–Ω–∞–ª–∏–∑–∞
    analysis_mode = choose_analysis_mode()
    print(f"\n–í—ã–±—Ä–∞–Ω —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞: {'–ì–ª—É–±–æ–∫–∏–π –ò–ò –∞–Ω–∞–ª–∏–∑' if analysis_mode == 'deep' else '–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑'}\n", flush=True)

    # 4. –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
    # 4a. –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –í–°–ï —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:
    if repositories:
        print(f"\n–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –ø—Ä–æ–µ–∫—Ç–∞ {project_name}?")
        print("1. –î–∞")
        print("2. –ù–µ—Ç")
        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()

        if choice == "1":
            clear_project_summary_cache(project_name)
            log(f"üóëÔ∏è –ö—ç—à –æ—á–∏—â–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project_name}")
            print(f"üóëÔ∏è –ö—ç—à –æ—á–∏—â–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: {project_name}\n")

        print(f"[DEBUG] –°—Ç–∞—Ä—Ç –∞–Ω–∞–ª–∏–∑–∞, –≤—ã–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç: {project_name}, –ö–æ–ª-–≤–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤: {len(repositories)}", flush=True)
        analyze_all_repositories(project_name, repositories, analysis_mode)

    # 4b. –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –û–î–ò–ù —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:
    else:
        repo_name = single_repository.name
        print(f"\n–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repo_name}?")
        print("1. –î–∞")
        print("2. –ù–µ—Ç")
        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()

        if choice == "1":
            clear_cache_for_repo(project_name, repo_name)
            log(f"üóëÔ∏è –ö—ç—à –æ—á–∏—â–µ–Ω –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repo_name}")
            print(f"üóëÔ∏è –ö—ç—à –æ—á–∏—â–µ–Ω –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {repo_name}\n")

        print(f"[DEBUG] –°—Ç–∞—Ä—Ç –∞–Ω–∞–ª–∏–∑–∞ –æ–¥–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {repo_name}", flush=True)
        # –ü—Ä–∏ –æ–¥–∏–Ω–æ—á–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–¥–∞—ë–º —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞
        analyze_repository(project_name, single_repository, repo_changed=True, analysis_mode=analysis_mode)

    print(f"üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω –¥–ª—è {project_name}", flush=True)
    log(f"üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω –¥–ª—è {project_name}")

if __name__ == "__main__":
    main()
