import os
from datetime import datetime

def generate_report(project_name, repository_name, files_data):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –æ –±—ã—Å—Ç—Ä–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
    
    –§–æ—Ä–º–∞—Ç –æ—Ç—á—ë—Ç–∞:
    
    üìÇ –û—Ç—á—ë—Ç –æ –±—ã—Å—Ç—Ä–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: <repository_name>
    ====================================================================================
    üìå –ü—Ä–æ–µ–∫—Ç: <project_name>
    üìå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: <repository_name>
    ====================================================================================
    
    üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:
    
    --------------------------------------------------------------------------------
    üìÇ <folder> - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤: <folder_tokens>
    üìÑ <file_path> ‚Äî <role> | üî¢ <lines> —Å—Ç—Ä–æ–∫ | üí¨ <comments> –∫–æ–º–º. | üè∑ <tokens> —Ç–æ–∫–µ–Ω–æ–≤
    ...
    --------------------------------------------------------------------------------
    
    ====================================================================================
    üìä –ò—Ç–æ–≥ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é: <repository_name>
    üìú –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: <total_lines>
    üí¨ –í—Å–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: <total_comments>
    üè∑ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: <total_tokens>
    ====================================================================================
    """
    reports_dir = "reports"
    report_folder = os.path.join(reports_dir, project_name, repository_name)
    os.makedirs(report_folder, exist_ok=True)
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M")
    report_filename = f"report_{repository_name}_{timestamp}.txt"
    report_path = os.path.join(report_folder, report_filename)
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –ø–∞–ø–∫–µ. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã –≤ files_data ‚Äì —Å–ª–æ–≤–∞—Ä–∏ —Å –∫–ª—é—á–∞–º–∏:
    # "path" (–∏–ª–∏ "file_name"), "lines", "comments", "tokens", "role"
    groups = {}
    total_lines = 0
    total_comments = 0
    total_tokens = 0
    
    for file_info in files_data:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º "path", –µ—Å–ª–∏ –µ—Å—Ç—å; –∏–Ω–∞—á–µ "file_name"
        path = file_info.get("path") or file_info.get("file_name") or "unknown"
        folder = os.path.dirname(path)
        # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞—è, –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å —ç—Ç–æ –∫–æ—Ä–Ω–µ–≤–æ–π –≥—Ä—É–ø–ø–æ–π (–æ—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É)
        if folder == "":
            folder = ""
        role = file_info.get("role", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å")
        lines = file_info.get("lines", 0)
        comments = file_info.get("comments", 0)
        tokens = file_info.get("tokens", 0)
        total_lines += lines
        total_comments += comments
        total_tokens += tokens
        if folder not in groups:
            groups[folder] = {"files": [], "folder_tokens": 0}
        groups[folder]["files"].append({
            "path": path,
            "role": role,
            "lines": lines,
            "comments": comments,
            "tokens": tokens
        })
        groups[folder]["folder_tokens"] += tokens

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º –ø—Ä–æ–±–µ–ª–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1 337)
    def fmt_number(n):
        return "{:,.0f}".format(n).replace(",", " ")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á—ë—Ç–∞
    header = f"üìÇ –û—Ç—á—ë—Ç –æ –±—ã—Å—Ç—Ä–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {repository_name}\n"
    sep = "=" * 100
    header += f"\n{sep}\n"
    header += f"üìå –ü—Ä–æ–µ–∫—Ç: {project_name}\n"
    header += f"üìå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repository_name}\n"
    header += f"{sep}\n\n"
    header += "üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:\n\n"
    
    group_texts = ""
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—ã –ø–æ –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏ (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∫–æ—Ä–Ω–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –±—É–¥–µ—Ç –ø–µ—Ä–≤–æ–π)
    for folder in sorted(groups.keys(), key=lambda x: (x != "", x)):
        folder_tokens = fmt_number(groups[folder]["folder_tokens"])
        group_header = "--------------------------------------------------------------------------------\n"
        if folder == "":
            group_header += f"üìÇ  - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤: {folder_tokens}\n"
        else:
            group_header += f"üìÇ {folder} - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤: {folder_tokens}\n"
        group_header += "--------------------------------------------------------------------------------\n"
        file_lines = ""
        for f in groups[folder]["files"]:
            file_path = f["path"]
            file_role = f["role"]
            file_lines += (f"üìÑ {file_path} ‚Äî {file_role} | üî¢ {fmt_number(f['lines'])} —Å—Ç—Ä–æ–∫ | "
                           f"üí¨ {fmt_number(f['comments'])} –∫–æ–º–º. | üè∑ {fmt_number(f['tokens'])} —Ç–æ–∫–µ–Ω–æ–≤\n")
        group_texts += group_header + file_lines + "--------------------------------------------------------------------------------\n"
    
    summary = f"{sep}\n"
    summary += f"üìä –ò—Ç–æ–≥ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é: {repository_name}\n"
    summary += f"üìú –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: {fmt_number(total_lines)}\n"
    summary += f"üí¨ –í—Å–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {fmt_number(total_comments)}\n"
    summary += f"üè∑ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {fmt_number(total_tokens)}\n"
    summary += f"{sep}\n"
    
    full_report = header + group_texts + summary
    
    with open(report_path, "w", encoding="utf-8") as f:
        f.write(full_report)
    
    return os.path.abspath(report_path)
