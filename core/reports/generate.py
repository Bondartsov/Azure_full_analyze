import os
from datetime import datetime
from core.reports.report_formatter import format_repository_report
from core.logging.logger import log

REPORTS_DIR = "reports"

def generate_report(project_name, repository_name, files_data):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é.
    :param project_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.
    :param repository_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
    :param files_data: –î–∞–Ω–Ω—ã–µ –æ —Ñ–∞–π–ª–∞—Ö –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (—Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π).
    :return: –ü—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.
    """
    log(f"üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repository_name}...")

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã `files_data`
    if not isinstance(files_data, list):
        log(f"‚ùå –û—à–∏–±–∫–∞: files_data –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º, –Ω–æ –ø–æ–ª—É—á–µ–Ω {type(files_data)}", level="ERROR")
        return None

    # ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (—Å–ª–æ–≤–∞—Ä–∏)
    valid_files = [file for file in files_data if isinstance(file, dict)]

    if not valid_files:
        log(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∞–π–ª–∞—Ö –¥–ª—è {repository_name}", level="ERROR")
        return None

    # ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    log(f"üîç –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files_data)}, –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö: {len(valid_files)}")

    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤
    os.makedirs(REPORTS_DIR, exist_ok=True)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
    report_content = format_repository_report(project_name, repository_name, valid_files)

    # –°–æ–∑–¥–∞—ë–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M")
    report_filename = f"{project_name}_{repository_name}_report_{timestamp}.txt"
    report_path = os.path.join(REPORTS_DIR, report_filename)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç
    try:
        with open(report_path, "w", encoding="utf-8") as f:
            f.write(report_content)
        log(f"‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_path}")

    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}", level="ERROR")
        return None

    return report_path
