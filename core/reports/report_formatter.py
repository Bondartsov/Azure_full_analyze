# core/reports/report_formatter.py

import json  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

def format_repository_report(project_name, repository_name, files_data):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
    :param project_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.
    :param repository_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
    :param files_data: –î–∞–Ω–Ω—ã–µ –æ —Ñ–∞–π–ª–∞—Ö –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.
    :return: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–∞.
    """
    report_lines = [
        f"üìÇ –û—Ç—á—ë—Ç –æ –±—ã—Å—Ç—Ä–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {repository_name}",
        "=" * 100,
        f"üìå –ü—Ä–æ–µ–∫—Ç: {project_name}",
        f"üìå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repository_name}",
        "=" * 100,
        "\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:\n"
    ]

    if not files_data:
        report_lines.append("‚ö† –í–Ω–∏–º–∞–Ω–∏–µ: –í —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return "\n".join(report_lines)

    folder_structure = {}
    for file in files_data:
        folder, filename = file["path"].rsplit("/", 1) if "/" in file["path"] else ("–ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è", file["path"])
        folder_structure.setdefault(folder, []).append((file["path"], filename, file))  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å

    total_lines = 0
    total_tokens = 0

    for folder, files in sorted(folder_structure.items()):
        report_lines.append(f"\nüìÇ {folder}")
        report_lines.append("-" * 80)
        for full_path, filename, file in sorted(files, key=lambda x: x[0]):
            total_lines += file.get('lines', 0)
            total_tokens += file.get('tokens', 0)
            report_lines.append(
                f"üìÑ {full_path} ‚Äî {file.get('role', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å')} | "
                f"üî¢ {file.get('lines', 0)} —Å—Ç—Ä–æ–∫ | üí¨ {file.get('comments', 0)} –∫–æ–º–º. | üè∑ {file.get('tokens', 0)} —Ç–æ–∫–µ–Ω–æ–≤"
            )

    report_lines.append("=" * 100)
    report_lines.append(f"üìä –ò—Ç–æ–≥ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é: {repository_name}")
    report_lines.append(f"üìú –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: {total_lines}")
    report_lines.append(f"üè∑ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {total_tokens}")
    report_lines.append("=" * 100)

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(f"\n[DEBUG] –§–∞–π–ª—ã, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è {repository_name}:")
    print(json.dumps(files_data, indent=4, ensure_ascii=False))

    return "\n".join(report_lines)


def format_project_summary(project_name, repositories_reports):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É.
    :param project_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.
    :param repositories_reports: –î–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º.
    :return: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–∞.
    """
    total_files = sum(len(repo.get("files", [])) for repo in repositories_reports if isinstance(repo, dict))
    total_lines = sum(sum(file.get("lines", 0) for file in repo.get("files", [])) for repo in repositories_reports if isinstance(repo, dict))
    total_comments = sum(sum(file.get("comments", 0) for file in repo.get("files", [])) for repo in repositories_reports if isinstance(repo, dict))
    total_tokens = sum(sum(file.get("tokens", 0) for file in repo.get("files", [])) for repo in repositories_reports if isinstance(repo, dict))

    report_lines = [
        f"üìä –°–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É: {project_name}",
        "=" * 100,
        f"üìÇ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤: {len(repositories_reports)}",
        f"üìÑ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {total_files}",
        f"üìú –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: {total_lines}",
        f"üí¨ –í—Å–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {total_comments}",
        f"üè∑ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {total_tokens}",
        "=" * 100,
        "\nüìÇ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:\n"
    ]

    for idx, repo in enumerate(repositories_reports, start=1):
        repo_tokens = sum(file.get("tokens", 0) for file in repo.get("files", []))
        repo_lines = sum(file.get("lines", 0) for file in repo.get("files", []))
        report_lines.append(f"üîπ {idx}. {repo['repository']} ‚Äî {repo_tokens} —Ç–æ–∫–µ–Ω–æ–≤, {repo_lines} —Å—Ç—Ä–æ–∫")

    report_lines.append("\n‚ö´ –ò—Ç–æ–≥:")
    report_lines.append(f"üìå –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ: {total_tokens}")
    report_lines.append("=" * 100)

    return "\n".join(report_lines)
