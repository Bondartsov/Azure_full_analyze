from core.azure.projects import get_projects
from core.azure.repos import get_repositories
from core.logging.logger import log

def choose_from_list(options, prompt):
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–ø—Ü–∏—é.
    """
    print(f"\n{prompt}")
    for i, option in enumerate(options, start=1):
        print(f"{i}. {option}")

    while True:
        try:
            choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: "))
            if 1 <= choice <= len(options):
                return options[choice - 1]
            else:
                print("‚ö† –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        except ValueError:
            print("‚ö† –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

def select_project():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ Azure DevOps –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
    """
    projects = get_projects()
    log(f"üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: {projects}")
    
    if not projects:
        log("‚ö† –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.", level="WARNING")
        return None

    project_name = choose_from_list(projects, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç")
    log(f"‚úÖ –í—ã–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç: {project_name}")
    
    return project_name


def select_repositories(project_name):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å:
    - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –∏–ª–∏ –æ–¥–∏–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.
    """
    repositories = get_repositories(project_name)
    log(f"üìå –ù–∞–π–¥–µ–Ω–æ {len(repositories)} —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤.")

    if not repositories:
        log(f"‚ö† –ù–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ {project_name}.", level="WARNING")
        return [], None  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫

    options = ["üìÇ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"] + [repo.name for repo in repositories]
    selected_option = choose_from_list(options, f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ {project_name}")  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞

    if selected_option == "üìÇ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏":
        return repositories, None  # –í—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    else:
        repository = next((repo for repo in repositories if repo.name == selected_option), None)
        return None, repository  # –û–¥–∏–Ω —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

def format_number(number):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ (1000000 -> 1 000 000)"""
    return f"{number:,}".replace(",", " ")
