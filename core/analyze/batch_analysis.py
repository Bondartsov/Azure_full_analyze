from tqdm import tqdm
from core.analyze.repository_analysis import analyze_repository
from core.reports.summary import generate_summary
from core.logging.logger import log

def analyze_all_repositories(project_name, repositories):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ –∏ —Å–æ–∑–¥–∞—ë—Ç —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç.
    """
    log(f"üìä –ù–∞—á–∞—Ç –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø—Ä–æ–µ–∫—Ç–∞ {project_name}...")

    repository_results = []
    with tqdm(total=len(repositories), desc="‚è≥ –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞", unit="—Ä–µ–ø–æ") as progress_bar:
        for repository in repositories:
            result = analyze_repository(project_name, repository, progress_bar)
            if result:
                repository_results.append(result)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞
    if repository_results:
        summary_path = generate_summary(project_name, repository_results)
        if summary_path:
            log(f"üìÑ –°–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {summary_path}")
            print(f"\nüìÑ –°–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω: {summary_path}")
    else:
        log(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á—ë—Ç: –Ω–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤.", level="WARNING")

    log(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø—Ä–æ–µ–∫—Ç–∞ {project_name} –∑–∞–≤–µ—Ä—à—ë–Ω!")
