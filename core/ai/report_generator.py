import os
from datetime import datetime
from core.ai.code_advisor import query_openai
from core.utils.token_counter import count_tokens_in_text

REPORTS_DIR = "ai_reports"

def generate_ai_report(project_name, repository_name, folder_name, file_name, file_content):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ò–ò-–æ—Ç—á—ë—Ç –ø–æ –∫–æ–¥—É —Ñ–∞–π–ª–∞.
    """
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    lines = file_content.split("\n")
    num_lines = len(lines)
    num_comments = sum(1 for line in lines if line.strip().startswith("#") or line.strip().startswith("//"))

    # –ü–æ–¥—Å—á—ë—Ç —Ç–æ–∫–µ–Ω–æ–≤
    num_tokens = count_tokens_in_text(file_content)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ò–ò
    prompt = f"""
    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:
    
    {file_content.encode("utf-8").decode("utf-8")}
    
    1. –û–ø—Ä–µ–¥–µ–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–¥–∞ (—Ñ—É–Ω–∫—Ü–∏–∏, –∫–ª–∞—Å—Å—ã, –∏–º–ø–æ—Ä—Ç—ã).
    2. –û–±—ä—è—Å–Ω–∏, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥.
    3. –ù–∞–π–¥–∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ —É—è–∑–≤–∏–º–æ—Å—Ç–∏.
    4. –ù–∞—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–∂–µ–Ω —ç—Ç–æ—Ç –∫–æ–¥ (1-10)?
    """.strip()

    analysis = query_openai(prompt)

    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤
    project_path = os.path.join(REPORTS_DIR, project_name, repository_name, folder_name)
    os.makedirs(project_path, exist_ok=True)

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M")
    report_filename = f"ai_report_{project_name}_{repository_name}_{folder_name}_{file_name}_{timestamp}.txt"
    report_path = os.path.join(project_path, report_filename)

    with open(report_path, "w", encoding="utf-8") as f:
        f.write(f"–ü—Ä–æ–µ–∫—Ç: {project_name}\n")
        f.write(f"–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repository_name}\n")
        f.write(f"–ü–∞–ø–∫–∞: {folder_name}\n")
        f.write(f"–§–∞–π–ª: {file_name}\n")
        f.write(f"–°—Ç—Ä–æ–∫ –∫–æ–¥–∞: {num_lines}\n")
        f.write(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {num_comments}\n")
        f.write(f"–¢–æ–∫–µ–Ω–æ–≤: {num_tokens}\n\n")
        f.write("üìå **–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞:**\n")
        f.write(analysis)

    return report_path
