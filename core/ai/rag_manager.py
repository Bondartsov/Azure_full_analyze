import json
import os
from core.ai.rag_storage import search_rag

RAG_DB = "rag_data.json"

def store_in_rag(project_name, repository_name, folder_name, file_name, analysis):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –≤ RAG –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏.
    """
    data = {
        "project": project_name,
        "repository": repository_name,
        "folder": folder_name,
        "file": file_name,
        "analysis": analysis
    }

    if os.path.exists(RAG_DB):
        with open(RAG_DB, "r", encoding="utf-8") as f:
            existing_data = json.load(f)
    else:
        existing_data = []

    existing_data.append(data)

    with open(RAG_DB, "w", encoding="utf-8") as f:
        json.dump(existing_data, f, indent=4, ensure_ascii=False)

    return True  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

def query_rag(project_name, repository_name, folder_name, file_name, query):
    print(f"üîç Querying RAG: project={project_name}, repo={repository_name}, folder={folder_name}, file={file_name}, query='{query}'")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
    results = search_rag(project_name, repository_name, folder_name, file_name, query)
    if not results:
        print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ RAG!")
        return "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–ø—Ä–æ—Å—É."

    return results[0]  # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É
