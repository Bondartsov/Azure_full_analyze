import os
import pytest
from core.reports.generate import generate_report

@pytest.fixture
def test_repository_data():
    """–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞."""
    return [
        {"path": "main.py", "role": "–ö–æ–¥", "lines": 100, "comments": 10, "tokens": 500},
        {"path": "utils/helpers.py", "role": "–ö–æ–¥", "lines": 50, "comments": 5, "tokens": 250},
        {"path": "README.md", "role": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "lines": 20, "comments": 0, "tokens": 100},
    ]

def test_generate_report(test_repository_data):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á—ë—Ç–∞ –ø–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é."""
    project_name = "TestProject"
    repository_name = "TestRepo"

    report_path = generate_report(project_name, repository_name, test_repository_data)

    assert os.path.exists(report_path), "–§–∞–π–ª –æ—Ç—á—ë—Ç–∞ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!"

    with open(report_path, "r", encoding="utf-8") as f:
        content = f.read()
        assert project_name in content, "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç—á—ë—Ç–µ!"
        assert repository_name in content, "–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç—á—ë—Ç–µ!"
        assert "üìÑ main.py" in content, "–§–∞–π–ª main.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç—á—ë—Ç–µ!"
